/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Adminui;

import Operations.Validations;
import java.beans.PropertyVetoException;
import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import model.dao.SectionInfoDao;
import model.dao.TestInfoDao;
import model.dao.TestQuestionDao;
import model.to.SectionInfoTo;
import model.to.TestInfoTo;
import model.to.TestQuestionTo;

/**
 *
 * @author POOJA PURI
 */
public class AddTestQuestion extends javax.swing.JInternalFrame {

    /**
     * Creates new form AddTestQuestion
     */
    public AddTestQuestion() {
        initComponents();
        jcbsectid.removeAllItems();
        jcbsectid.addItem("Choose A Section ID");
        List<SectionInfoTo> section = new SectionInfoDao().getAllRecord();
        if (section != null && section.size() > 0) {
            for (SectionInfoTo Sit : section) {
                jcbsectid.addItem(Sit);
            }
        }
        jcbtestid.removeAllItems();
        jcbtestid.addItem("Choose A Test ID");
        List<TestInfoTo> test = new TestInfoDao().getAllRecord();
        if (test != null && test.size() > 0) {
            for (TestInfoTo tit : test) {
                jcbtestid.addItem(tit);
            }
        }
        jcbAnswer.removeAllItems();
        jcbAnswer.addItem("Choose Any Answer");
        jcbAnswer.addItem("A");
        jcbAnswer.addItem("B");
        jcbAnswer.addItem("C");
        jcbAnswer.addItem("D");
    }
    private TestQuestionTo tqt;

    public AddTestQuestion(String QuestionID) {
        this();
        tqt = new TestQuestionDao().getRecord(QuestionID);
        if (tqt != null) {
            for (int i = 1; i < jcbsectid.getItemCount(); i++) {
                SectionInfoTo Sit = (SectionInfoTo) jcbsectid.getItemAt(i);
                if (Sit.getSectionId().equals(tqt.getSectionID())) {
                    jcbsectid.setSelectedIndex(i);
                    break;
                }
            }
            for (int i = 1; i < jcbAnswer.getItemCount(); i++) {
                jcbAnswer.setSelectedIndex(i);
                break;
            }
            for (int i = 1; i < jcbtestid.getItemCount(); i++) {
                TestInfoTo tit = (TestInfoTo) jcbtestid.getItemAt(i);
                if (tit.getTestID()==tqt.getTestID()) {
                    jcbtestid.setSelectedIndex(i);
                    break;
                }
            }
            jtfQuestion.setText(tqt.getQuestionText());
            ///jtfSectionID.setEditable(false);
            jtfOptionA.setText(tqt.getOptionA());
            jtfOptionB.setText(tqt.getOptionB());
            jtfOptionC.setText(tqt.getOptionC());
            jtfOptionD.setText(tqt.getOptionD());
            //jtfAnswer.setText(tqt.getAnswer());
            jtfMarks.setText(String.valueOf(tqt.getMarks()));
            jbtnProceed.setText("Update Question Information");
            setTitle("ES:: Update Information");

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfQuestionText = new javax.swing.JLabel();
        jrbOptA = new javax.swing.JRadioButton();
        jrbOptA1 = new javax.swing.JRadioButton();
        jrbOptA2 = new javax.swing.JRadioButton();
        jrbOptA3 = new javax.swing.JRadioButton();
        jtfQuestionText1 = new javax.swing.JLabel();
        jtfQuestionText2 = new javax.swing.JLabel();
        jtfQuestionText3 = new javax.swing.JLabel();
        jtfQuestionText4 = new javax.swing.JLabel();
        jbtnProceed = new javax.swing.JButton();
        jtfMarks = new javax.swing.JTextField();
        jtfOptionD = new javax.swing.JTextField();
        jtfOptionC = new javax.swing.JTextField();
        jtfOptionB = new javax.swing.JTextField();
        jtfQuestion = new javax.swing.JTextField();
        jcbtestid = new javax.swing.JComboBox<>();
        jcbAnswer = new javax.swing.JComboBox<>();
        jcbsectid = new javax.swing.JComboBox<>();
        jtfOptionA = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("ES::QUESTIONS");
        setAutoscrolls(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Adminui/ex.png"))); // NOI18N

        jtfQuestionText.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jtfQuestionText.setText("Question ");

        jrbOptA.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jrbOptA.setText("Option B");

        jrbOptA1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jrbOptA1.setText("Option A");

        jrbOptA2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jrbOptA2.setText("Option C");

        jrbOptA3.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jrbOptA3.setText("Option D");

        jtfQuestionText1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jtfQuestionText1.setText("Choose Section ID");

        jtfQuestionText2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jtfQuestionText2.setText("Choose Test ID");

        jtfQuestionText3.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jtfQuestionText3.setText("Answer ");

        jtfQuestionText4.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jtfQuestionText4.setText("Marks");

        jbtnProceed.setFont(new java.awt.Font("Jokerman", 1, 36)); // NOI18N
        jbtnProceed.setForeground(new java.awt.Color(153, 0, 0));
        jbtnProceed.setText("PROCEED");
        jbtnProceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnProceedActionPerformed(evt);
            }
        });

        jcbtestid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbAnswer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbsectid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbtnProceed, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfQuestionText4, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jtfQuestionText3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jtfQuestionText2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jrbOptA3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jrbOptA1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jrbOptA2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jtfQuestionText1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(31, 31, 31))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jrbOptA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfQuestionText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jcbtestid, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbsectid, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfOptionA, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfOptionB, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfOptionC, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfOptionD, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfMarks, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfQuestionText1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbsectid, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfQuestionText2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbtestid, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfQuestionText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtfOptionA, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3))
                    .addComponent(jrbOptA1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfOptionB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jrbOptA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jrbOptA2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jtfOptionC, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jrbOptA3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfOptionD))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfQuestionText3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfQuestionText4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfMarks, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnProceed, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnProceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnProceedActionPerformed
        String message = " ";
        boolean allvalid = true;
        if (jcbsectid.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please Choose Any Section ID \n";
        }
        if (jcbtestid.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please Choose Any Test ID\n";
        }
        if (jcbAnswer.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please Opt For Any Answer\n";
        }
        String Question = jtfQuestion.getText().trim();
        String OptionA = jtfOptionA.getText().trim();
        String OptionB = jtfOptionB.getText().trim();
        String OptionC = jtfOptionC.getText().trim();
        String OptionD = jtfOptionD.getText().trim();
        //String Answer=jtfAnswer.getText().trim();
        String Marks = jtfMarks.getText().trim();
        if (Validations.isEmpty(Question)) {
            message += "Please Enter The Question\n";
            allvalid = false;
        }
        if(!Validations.onlyCharacter(Question)){
            message += "Question should be a text\n";
            allvalid = false;
        }
        if (Validations.isEmpty(OptionA)) {
            message += "Please Enter The First Choice\n";
            allvalid = false;
        }
        if (Validations.isEmpty(OptionB)) {
            message += "Please Enter the Second Choice\n";
            allvalid = false;
        }
        if (Validations.isEmpty(OptionC)) {
            message += "Please Enter the Third Choice\n";
            allvalid = false;
        }
        if (Validations.isEmpty(OptionD)) {
            message += "Please Enter The Fourth Choice\n";
            allvalid = false;
        }
        if (Validations.isEmpty(Marks)) {
            message += "Please Enter The Marks\n";
            allvalid = false;
        }
        if(!Validations.isNumeric(Marks)){
            message += "Marks Must be Numeric\n";
            allvalid = false;
        }
        if (allvalid) {
            TestQuestionTo tqt = new TestQuestionTo();
            SectionInfoTo Sit = (SectionInfoTo) jcbsectid.getSelectedItem();
            TestInfoTo tit = (TestInfoTo) jcbtestid.getSelectedItem();
            tqt.setQuestionText(Question);
            tqt.setOptionA(OptionA);
            tqt.setOptionB(OptionB);
            tqt.setOptionC(OptionC);
            tqt.setOptionD(OptionD);
            tqt.setSectionID(Sit.getSectionId().toString());
            tqt.setTestID(tit.getTestID());
            //tqt.setAnswer(Answer);
            tqt.setAnswer(jcbAnswer.getSelectedItem().toString());
            tqt.setMarks(Integer.parseInt(Marks));
            TestQuestionDao action = new TestQuestionDao();
            if (jbtnProceed.getText().contains("PROCEED")) {
                if (action.insertRecord(tqt)) {
                    message += "New Record Is Added In The System";
                    JInternalFrame[] frames = getDesktopPane().getAllFrames();
                    if (frames != null) {
                        for (JInternalFrame jif : frames) {
                            if (jif instanceof ViewTestQuestion) {
                                ViewTestQuestion vtq = (ViewTestQuestion) jif;
                                vtq.bindtableTestQuestionInfo();
                                break;
                            }
                        }
                    }
                    JOptionPane.showMessageDialog(this, message);
                } else {
                    message += action.getErrormessage();
                    
                }//JOptionPane.showMessageDialog(this, message, "Error Message From System", JOptionPane.ERROR_MESSAGE);
            } else if (jbtnProceed.getText().contains("Update")) {
                tqt.setQuestionID(this.tqt.getQuestionID());
                if (action.updateRecord(tqt)) {
                    message = "Information is updated in the system";
                } else {
                    message = action.getErrormessage();
                }
                ViewTestQuestion vtq = new ViewTestQuestion();
                vtq.setVisible(true);
                getDesktopPane().add(vtq);
                try {
                    vtq.setSelected(true);
                } catch (PropertyVetoException ex) {

                }
                dispose();
            } else {
                message = "Bad Command";

            }

        }
        JOptionPane.showMessageDialog(this, message, "Error Message From System", JOptionPane.ERROR_MESSAGE);

    }//GEN-LAST:event_jbtnProceedActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtnProceed;
    private javax.swing.JComboBox<Object> jcbAnswer;
    private javax.swing.JComboBox<Object> jcbsectid;
    private javax.swing.JComboBox<Object> jcbtestid;
    private javax.swing.JRadioButton jrbOptA;
    private javax.swing.JRadioButton jrbOptA1;
    private javax.swing.JRadioButton jrbOptA2;
    private javax.swing.JRadioButton jrbOptA3;
    private javax.swing.JTextField jtfMarks;
    private javax.swing.JTextField jtfOptionA;
    private javax.swing.JTextField jtfOptionB;
    private javax.swing.JTextField jtfOptionC;
    private javax.swing.JTextField jtfOptionD;
    private javax.swing.JTextField jtfQuestion;
    private javax.swing.JLabel jtfQuestionText;
    private javax.swing.JLabel jtfQuestionText1;
    private javax.swing.JLabel jtfQuestionText2;
    private javax.swing.JLabel jtfQuestionText3;
    private javax.swing.JLabel jtfQuestionText4;
    // End of variables declaration//GEN-END:variables
}
