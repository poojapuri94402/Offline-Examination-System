/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exam.suite;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import model.dao.LoginInfoDAO;
import model.to.LoginInfoTo;
import model.to.SubjectInfoTo;

/**
 *
 * @author POOJA PURI
 */
public class ViewUsers extends javax.swing.JInternalFrame {

    /**
     * Creates new form ViewUsers
     */
    List<LoginInfoTo> login;
    private int row;
    private JPopupMenu popupmenu;
    public ViewUsers() {
        initComponents();
        bindtableViewUser();
        row=-1;
        popupmenu=new JPopupMenu();
        JMenuItem jmiDelete=new JMenuItem("Delete This Record");
        jmiDelete.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                DeleteRecord();
            }
        });
        popupmenu.add(jmiDelete);
    }
    private void DeleteRecord(){
        if(row!=-1&&login!=null&&row<login.size()){
            int result=JOptionPane.showConfirmDialog(this, "Are you Sure You Want To Delete This Information ?","Message From The System",JOptionPane.YES_NO_OPTION);
            if(result==JOptionPane.YES_OPTION){
               String message="";
               LoginInfoTo lit=login.get(row);
               if(lit!=null){
                   LoginInfoDAO action=new LoginInfoDAO();
                   if(action.deleteRecord(lit.getUserName())){
                       message="Selected Information Is Deleted";
                       bindtableViewUser();
                   }else{
                       message=action.getErrormessage();
                   }
                   JOptionPane.showMessageDialog(this, message);
               }
            }
        }
        row=-1;
    }
public void bindtableViewUser(){
    login=new LoginInfoDAO().getAllRecord();
    String[] colnames={"UserName","Password","RoleName","LastLogin"};
    Object[][] records=null;
    if(login!=null&& login.size()>0){
        records=new Object[login.size()][colnames.length];
        int i=0;
        for(LoginInfoTo lit: login){
            records[i]=new Object[]{lit.getUserName(),lit.getPassword(),lit.getRoleName(),lit.getLastLogin()};
            i++;
        }
    }else{
        records=new Object[1][colnames.length];
        records[0]=new Object[]{"No record","No record","No record","No record"};
    }
    DefaultTableModel dtm=new DefaultTableModel(records, colnames){
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
       };
    table.getTableHeader().setReorderingAllowed(false);
    table.setAutoCreateRowSorter(true);
    table.setModel(dtm);
    
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnrefresh = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("ES::View Users");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        btnrefresh.setFont(new java.awt.Font("Jokerman", 1, 24)); // NOI18N
        btnrefresh.setText("REFRESH");
        btnrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(btnrefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnrefresh)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefreshActionPerformed
        bindtableViewUser();
    }//GEN-LAST:event_btnrefreshActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        if(evt.getButton()==MouseEvent.BUTTON3){
            int rowpoint=table.rowAtPoint(evt.getPoint());
            table.getSelectionModel().setSelectionInterval(rowpoint, rowpoint);
            popupmenu.show(table,evt.getX(),evt.getY());
            row=table.getSelectedRow();
        }

    }//GEN-LAST:event_tableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnrefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
